---
layout: post
title: Ssl환경에서 TcpClient사용 시 데이터가 잘리는 경우
date: 2024-05-09 19:20:23 +0900
category: c#
---

TcpClient를 이용하여 HTTPS통신을 하는데  SslStream로 데이터를 읽을 때 스트림이 순간적으로 비어있게되는 경우가 있었다.


Ssl이 아닐때는 NetworkStream을 이용하기 때문에 clientStream.DataAvailable값을 체크할 수가 있는데,

sslStream은 이 값이 없어서 Stream.Read가 리턴하는 byte를 체크하여 스트림이 비어있는 경우를 확인했다.

이렇게하면 클라이언트는 데이터를 송신하는 속도보다 서버가 데이터를 읽는 속도가 더 빠른경우 스트림이 비는 경우가 생기고 결과적으로 데이터를 다 읽지 못하는 문제가 생겼다.

임시방편으로 클라이언트 속도를 고려해 서버에서 딜레이를 걸었더니 현상이 완화되었다.

```c#

 byte[] buffer = new byte[2048];
 int bytes = -1;

 do
 {
     try
     {
         bytes = clientStream.Read(buffer, 0, buffer.Length);
         ms.Write(buffer, 0, bytes);

         if (!clientStream.DataAvailable)
             Thread.Sleep(100);
     }
     catch
     {
         break;
     }
 } while (clientStream.DataAvailable);

 string message = Encoding.UTF8.GetString(ms.ToArray());

 string[] spliter = new string[] { "\r\n\r\n" };
 string[] result = message.Split(spliter, StringSplitOptions.None);

 return result[1];
 
```


하지만 근본적인 해결책이 아니기 때문에 HTTPS통신을 사용하려면 범용적인 HTTPListener클래스를 사용하는 것이 좋다.

HTTPListener class를 사용하였을 때 위 이슈는 더이상 발생하지 않았다.


